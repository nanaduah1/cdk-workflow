name: Create Release
run-name: Create Production release by @${{ github.actor }}
on:
  workflow_dispatch:
    branches: [main]

jobs:
  create-release:
    runs-on: ubuntu-latest
    name: Create production release
    steps:
      - name: Generate Release tag name
        id: release_date
        run: echo "::set-output name=tag_name::$(date +'%Y-%m-%d.%H%M%S')"

      - name: Create release tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.release_date.outputs.tag_name }}',
              sha: context.sha
            })

      - name: "Create release"
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.RELEASE_JOB_TOKEN }}"
          script: |
            try {
              const response = await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: "${{ steps.release_date.outputs.tag_name }}",
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: '${{ steps.release_date.outputs.tag_name }}',
              });

              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }
